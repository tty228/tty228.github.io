<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【RouterOS(ROS)】Cloudflare DDNS 脚本</title>
    <url>/2025/05/10/MikroTik(ROS)%20Cloudflare%20DDNS%20%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li></li>
</ul>
<h2 id="本文基于-ROS-7-18-2-编写"><a href="#本文基于-ROS-7-18-2-编写" class="headerlink" title="本文基于 ROS 7.18.2 编写"></a><strong>本文基于 ROS 7.18.2 编写</strong></h2><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>因为最近忽悠了个同事玩NAS，暂时用的我的域名，给他整完反代之后，看着 cloudflare 一大串的域名记录，看着很蛋疼，索性把没必要更新的地址全都换成了 CNAME 记录，看起来清爽多了<br>然后还是感觉原本的脚本不太好用，就重新写了一个脚本自用<br>和网上流传的脚本，主要有以下改进：</p>
<ul>
<li>✅ 支持多个域名和记录类型（A &#x2F; AAAA）同时更新</li>
<li>🔐 使用 Cloudflare API Token，设置更简单</li>
<li>➕ 自动新建域名记录，无需手动创建</li>
<li>🧠 使用缓存机制，避免高频 API 请求，支持强制更新时间间隔</li>
<li>📤 支持提交本机或内网设备的 IPv6 地址（如 ::1、手动后缀拼接、MAC 地址获取）</li>
<li>📡 使用 Cloudflare DNS API 读取域名记录，而非 DNS 解析</li>
</ul>
<p>其实本来应该加上可以同步多个设备 IPv6 地址的，不过考虑到设置反代之后其实根本不需要这个功能，就懒得做了</p>
<span id="more"></span>
<h4 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h4><p>设置方面比较简单，只需要在脚本顶部设置以下变量：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:local CFiface &quot;pppoe-out1&quot;      # 获取IPv4地址的接口</span><br><span class="line">:local CFiface6 &quot;pppoe-out1&quot;     # 获取IPv6前缀的接口</span><br><span class="line">:local CFzoneid &quot;你的Zone ID&quot;    # 区域 ID</span><br><span class="line">:local CFtoken &quot;你的API令牌&quot;      # 创建令牌-&gt;编辑区域 DNS (请勿使用全局 API)</span><br><span class="line"># 设置要更新的记录（支持多个）：</span><br><span class="line">:local DomainsToUpdate &#123;</span><br><span class="line">    &quot;v4.domain.com|A&quot;;</span><br><span class="line">    &quot;v6.domain.com|AAAA&quot;;</span><br><span class="line">    &quot;ds.domain.com|A&quot;;</span><br><span class="line">    &quot;ds.domain.com|AAAA&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/tty228/mikrotik-scripts/tree/main/cloudflare_ddns" title="项目地址">项目地址</a></p>
]]></content>
      <categories>
        <category>RouterOS</category>
      </categories>
      <tags>
        <tag>RouterOS</tag>
        <tag>ROS</tag>
        <tag>Cloudflare DDNS</tag>
        <tag>ROS Cloudflare DDNS</tag>
        <tag>ROS Script</tag>
      </tags>
  </entry>
  <entry>
    <title>【RouterOS(ROS)】IPv4 &amp; IPv6 自动分流设置</title>
    <url>/2025/05/09/%E3%80%90RouterOS(ROS)%E3%80%91IPv4%20IPv6%20%E8%87%AA%E5%8A%A8%E5%88%86%E6%B5%81%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li></li>
</ul>
<h2 id="本文基于-ROS-7-18-2-编写"><a href="#本文基于-ROS-7-18-2-编写" class="headerlink" title="本文基于 ROS 7.18.2 编写"></a><strong>本文基于 ROS 7.18.2 编写</strong></h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p> IPv6 日渐普及，最近闲来无事，想着把 RouterOS 上的分流规则改为 IPv4 &amp; IPv6，因为 IPv6 的分流设置和 IPv4 有诸多不同，在此记录一下</p>
<h3 id="自动更新分流规则的脚本"><a href="#自动更新分流规则的脚本" class="headerlink" title="自动更新分流规则的脚本"></a>自动更新分流规则的脚本</h3><p>左侧 System → Scripts，新建一个用于自动更新分流规则的脚本<br><a href="https://tty228.github.io/2022/06/09/%E3%80%90RouterOS(ROS)%E3%80%91%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%88%86%E6%B5%81%E8%A7%84%E5%88%99/" title="【RouterOS(ROS)】自动更新分流规则 by 2022">【RouterOS(ROS)】自动更新分流规则 by 2022</a>  之前的文章有一个适用于 IPv4 的更新脚本，我们在这里需要做一下修改，使它可以适用于 IPv4 &amp; IPv6  </p>
<p>这里使用的是已经制作好的 IP 列表文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 下载 IPv4 并重命名</span><br><span class="line">/tool fetch url=http://www.iwik.org/ipcountry/mikrotik/CN dst-path=CN_ipv4</span><br><span class="line"></span><br><span class="line"># 下载 IPv6 并重命名</span><br><span class="line">/tool fetch url=http://www.iwik.org/ipcountry/mikrotik_ipv6/CN dst-path=CN_ipv6</span><br><span class="line"></span><br><span class="line"># 关闭日志输出避免刷屏</span><br><span class="line">/system logging disable 0</span><br><span class="line"></span><br><span class="line">/import file-name=CN_ipv4</span><br><span class="line">:local CNv4 [:len [/ip firewall address-list find list=&quot;CN&quot;]]</span><br><span class="line">/file remove [find name=&quot;CN_ipv4&quot;]</span><br><span class="line"></span><br><span class="line">/import file-name=CN_ipv6</span><br><span class="line">:local CNv6 [:len [/ipv6 firewall address-list find list=&quot;CN&quot;]]</span><br><span class="line">/file remove [find name=&quot;CN_ipv6&quot;]</span><br><span class="line"></span><br><span class="line"># 恢复日志输出</span><br><span class="line">/system logging enable 0</span><br><span class="line">:log info (&quot;CN列表更新: IPv4 &quot; . $CNv4 . &quot;条, IPv6 &quot; . $CNv6 . &quot;条&quot;)</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<hr>
<p>成功的话应该能在防火墙和日志中看到如下内容：<br><img src="/images/2025/1_1.png" alt="脚本运行状态"></p>
<h3 id="路由表设置"><a href="#路由表设置" class="headerlink" title="路由表设置"></a>路由表设置</h3><p>左侧 Routing → Tables，新建一个路由表，名字自己随便写，我这里使用的是 openwrt，路由表用于防火墙标记和指定流量出口</p>
<ul>
<li>FIB： 勾选<br><img src="/images/2025/1_2.png" alt="路由表"></li>
</ul>
<h4 id="IPv4-路由设置："><a href="#IPv4-路由设置：" class="headerlink" title="IPv4 路由设置："></a>IPv4 路由设置：</h4><p>左侧菜单 IP → Routes，新建一条路由规则：<br><img src="/images/2025/1_3.png" alt="IPv4 路由表"></p>
<ul>
<li>Dst.Address：0.0.0.0&#x2F;0</li>
<li>Gateway：旁路网关IP地址</li>
<li>Distance：2 # (建议使用大于1的低优先级)</li>
<li>Routing Table： 选中刚刚新建的路由表，例如 openwrt<br>点击Apply → OK，保存提交。<br>使用命令导入：<br><code>/ip route add dst-address=0.0.0.0/0 gateway=192.168.1.250 distance=2 routing-table=openwrt</code></li>
</ul>
<h4 id="IPv6-路由设置："><a href="#IPv6-路由设置：" class="headerlink" title="IPv6 路由设置："></a>IPv6 路由设置：</h4><p>左侧菜单 IPv6 → Routes，新建一条路由规则：<br><img src="/images/2025/1_4.png" alt="IPv6 路由表"></p>
<ul>
<li>Dst.Address：::&#x2F;0</li>
<li>Gateway： 旁路网关的本地链路 IPv6 地址 ，例如 <code>fe80::be24:11ff:fe79:7afe%bridge1</code>  [1]</li>
<li>Distance：2 # (建议使用大于1的低优先级)</li>
<li>Routing Table： 选中刚刚新建的路由表，例如 openwrt<br>点击Apply → OK，保存提交。<br>使用命令导入：<br><code>/ipv6 route add dst-address=::/0 gateway=fe80::be24:11ff:fe79:7afe%bridge1 immediate-gateway=fe80::be24:11ff:fe79:7afe%bridge1 distance=2 routing-table=openwrt</code></li>
</ul>
<p>注：如果 Gateway 填写的是本地链路 IPv6 地址，如 fe80:: ，则需要在地址后面加上接口名称或者网口名称，如 bridge1，则为 <code>fe80::be24:11ff:fe79:7afe%bridge1</code> ，如果使用的是 ULA 地址，直接在 Gateway 处填入 ULA 地址即可，无需接口名称</p>
<h3 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h3><h4 id="IPv4-防火墙规则"><a href="#IPv4-防火墙规则" class="headerlink" title="IPv4 防火墙规则"></a>IPv4 防火墙规则</h4><h5 id="跳过旁路网关流量"><a href="#跳过旁路网关流量" class="headerlink" title="跳过旁路网关流量"></a>跳过旁路网关流量</h5><p>首先我们需要对旁路网关发送来的流量进行特殊处理，使其跳过流量标记，避免路由环路<br>左侧 IP → Firewall → Mangle，新建一条 prerouting 规则<br><img src="/images/2025/1_5.png" alt="IPv6 路由表"></p>
<blockquote>
<p>General</p>
</blockquote>
<ul>
<li>Src.Address： 填写旁路网关的IP地址</li>
<li>In.Interface： 选择桥接口名字或者网口名称，如 bridge1、ether2</li>
</ul>
<blockquote>
<p>Advanced</p>
</blockquote>
<ul>
<li>Src.MAC Address：  填写旁路网关流量出口的 MAC 地址，和 Src.Address 二选一即可。</li>
</ul>
<blockquote>
<p>Action</p>
</blockquote>
<ul>
<li>Action： Accept （表示通过和跳过下列的防火墙规则）</li>
</ul>
<h5 id="国外流量标记"><a href="#国外流量标记" class="headerlink" title="国外流量标记"></a>国外流量标记</h5><p>再新建一条 prerouting 规则用于流量标记<br><img src="/images/2025/1_6.png" alt="IPv4 防火墙规则"></p>
<blockquote>
<p>General</p>
</blockquote>
<ul>
<li>Dst.Address List： 目标地址列表，选择 CN 和 前面的空白方块 [!] ，表示目标地址不在 CN 列表中时才命中规则</li>
<li>Src.Address List： 源地址列表，如果希望局域网内只有部分设备使用这个自动分流规则，那么可以自己去 Address List 添加一个列表，留空时为所有设备</li>
</ul>
<blockquote>
<p>Extra</p>
</blockquote>
<ul>
<li>Dst.Address Type： 下拉选择 local，然后点击前面空白方块为 [!] ，即目标地址不属于局域网地址时才命中规则</li>
</ul>
<blockquote>
<p>Action</p>
</blockquote>
<ul>
<li>Action：  makr routing  重新标记路由</li>
<li>New Routing Mark： 选择之前添加的路由表</li>
<li>Passthrough： 如果下方还需要对这条流量做别的处理 ，则需要勾选</li>
</ul>
<p>使用命令导入：</p>
<blockquote>
<p>my_device 为防火墙自定义 Address List</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/ip firewall mangle</span><br><span class="line">add action=accept chain=prerouting in-interface=bridge1 src-address=\</span><br><span class="line">    192.168.1.250</span><br><span class="line">add action=mark-routing chain=prerouting dst-address-list=!CN \</span><br><span class="line">    dst-address-type=!local new-routing-mark=openwrt src-address-list=\</span><br><span class="line">    my_device</span><br></pre></td></tr></table></figure>

<p>注：</p>
<ol>
<li>必须保证”跳过流量标记”的防火墙规则在”流量标记”规则的上方</li>
<li>如果需要将 DNS 修改为旁路网关，需检查 NAT 规则，确保未开启 DNS 劫持，如果使用 DHCP 指定分配 DNS 则不需要关闭劫持规则</li>
<li>检查 IP 伪装规则，如果使用的是 WAN 接口伪装，需要修改为整个局域网子网段，否则需要在旁路网关防火墙处设置 IP 伪装规则<br>（<em>或参考文末”其他设置”中的处理方案</em>）<br><img src="/images/2025/1_7.png" alt="IPv4 防火墙规则"></li>
</ol>
<h4 id="IPv6-防火墙规则"><a href="#IPv6-防火墙规则" class="headerlink" title="IPv6 防火墙规则"></a>IPv6 防火墙规则</h4><h5 id="跳过旁路网关流量-1"><a href="#跳过旁路网关流量-1" class="headerlink" title="跳过旁路网关流量"></a>跳过旁路网关流量</h5><p>左侧 IP → Firewall → Mangle，新建一条 prerouting 规则，IPv6 通常为动态公网单播地址，无法使用 Src.Address，需要改为 MAC 地址 Src.MAC Address</p>
<blockquote>
<p>General</p>
</blockquote>
<ul>
<li>In.Interface： 选择桥接口名字或者网口名称，如 bridge1、ether2</li>
</ul>
<blockquote>
<p>Advanced</p>
</blockquote>
<ul>
<li>Src.MAC Address：  填写旁路网关流量出口的 MAC 地址</li>
</ul>
<blockquote>
<p>Action</p>
</blockquote>
<ul>
<li>Action： Accept （表示通过和跳过下列的防火墙规则）</li>
</ul>
<h5 id="跳过-ICMPv6-ND-和-DHCPv6-的流量"><a href="#跳过-ICMPv6-ND-和-DHCPv6-的流量" class="headerlink" title="跳过 ICMPv6 (ND) 和 DHCPv6 的流量"></a>跳过 ICMPv6 (ND) 和 DHCPv6 的流量</h5><p>IPv6 防火墙规则和 IPv4 有一些区别，除了”跳过流量标记”和”流量标记”外，还需要跳过 ICMPv6 (ND) 和 DHCPv6 的流量，否则会造成 IPv6 网络异常<br>ICMPv6(ND)： protocol&#x3D;58 (icmpv6)<br>DHCPv6：dst-port&#x3D;546-547 protocol&#x3D;udp<br><img src="/images/2025/1_8.png" alt="IPv6 防火墙规则"></p>
<h5 id="国外流量标记-1"><a href="#国外流量标记-1" class="headerlink" title="国外流量标记"></a>国外流量标记</h5><p>IPV6 通常不需要勾选 [!]local，因为流量都是公网单播地址（GUA）<br>同样的原因，IPv6 防火墙无法使用 Src.Address List，如果并非全局分流，需要每个设备一条规则，使用 MAC 地址<br><img src="/images/2025/1_9.png" alt="IPv6 防火墙规则"></p>
<blockquote>
<p>General</p>
</blockquote>
<ul>
<li>Dst.Address List： 目标地址列表，选择 CN 和 前面的空白方块 [!] ，表示目标地址不在 CN 列表中时才命中规则</li>
</ul>
<blockquote>
<p>Advanced</p>
</blockquote>
<ul>
<li>Src.MAC Address：  填写需要分流设备的 MAC 地址</li>
</ul>
<blockquote>
<p>Action</p>
</blockquote>
<ul>
<li>Action：  makr routing  重新标记路由</li>
<li>New Routing Mark： 选择之前添加的路由表</li>
<li>Passthrough： 如果下方还需要对这条流量做别的处理 ，则需要勾选</li>
</ul>
<p>使用命令导入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/ipv6 firewall mangle</span><br><span class="line">add action=accept chain=prerouting in-interface=bridge1 src-mac-address=\</span><br><span class="line">    AA:AA:AA:AA:AA:AA</span><br><span class="line">add action=accept chain=prerouting comment=&quot;Bypass ICMPv6 (ND)&quot; protocol=\</span><br><span class="line">    icmpv6</span><br><span class="line">add action=accept chain=prerouting comment=&quot;Bypass DHCPv6&quot; dst-port=546-547 \</span><br><span class="line">    protocol=udp</span><br><span class="line">add action=mark-routing chain=prerouting comment=&quot;My Device&quot; \</span><br><span class="line">    dst-address-list=!CN new-routing-mark=openwrt \</span><br><span class="line">    src-mac-address=BB:BB:BB:BB:BB:BB</span><br></pre></td></tr></table></figure>
<p>注：</p>
<ol>
<li>必须保证”跳过流量标记”的防火墙规则在”流量标记”规则的上方</li>
<li>如果需要将 DNS 修改为旁路网关，需检查 NAT 规则，确保未开启 DNS 劫持，如果使用 ND 指定分配 DNS 则不需要关闭劫持规则</li>
<li>在能过获得前缀的情况下，IPv6 通常不需要开启 IP 伪装，如果错误的开启 IP 伪装，会导致外部服务器只能获取到网关 IPv6 地址，而非真实的设备 IPv6 地址<br><img src="/images/2025/1_10.png" alt="IPv6 防火墙规则"></li>
</ol>
<h4 id="兼容安卓残疾-IPv6"><a href="#兼容安卓残疾-IPv6" class="headerlink" title="兼容安卓残疾 IPv6"></a>兼容安卓残疾 IPv6</h4><h5 id="IPv6-ND-设置"><a href="#IPv6-ND-设置" class="headerlink" title="IPv6 ND 设置"></a>IPv6 ND 设置</h5><p>总所周知，安卓的 IPv6 网络功能愚蠢又弱智，既不支持 DHCPv6，也不能指定 DNS 地址，也不支持网关宣告的 fe80 本地链路 DNS 地址，只能使用动态的 GUA（或者需要在本地链路注明接口名称？），这给分流带来了很多不方便，所以如果你使用的是安卓设备，又不想通过防火墙拒绝 ICMPv6 (ND) 包来禁用安卓设备的 IPv6 功能的话，可以把 ND DNS 设置清空<br><img src="/images/2025/1_11.png" alt="IPv6 ND 设置"></p>
<ul>
<li>删除 DNS 地址信息</li>
<li>在 ND 信息中不包含 DNS 地址<br>这样可以使安卓设备仅使用 IPv4 DNS 地址<br><strong>但这可能会因为缺少 IPV6 DNS，造成部分设备需要手动指定 DNS 才能上网，如某些单网口的 OpenWrt，谨慎使用</strong><br><strong>如果默认设置或者分发 fe80:: DNS 可以正常上网时，不建议修改</strong></li>
</ul>
<h5 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h5><p>其实经过上面的设置之后，基本上已经可以正常上网了，但如果 IPv6 防火墙开启了丢弃无效的转发包，部分安卓设备会因为路由标记非对称路由(?)，造成 TCP 握手未完成且包被丢弃，造成 IPv6 无法上网<br>有以下几种解决方案：</p>
<ol>
<li>直接关闭”丢弃无效的转发包”规则<br><img src="/images/2025/1_12.png" alt="IPv6 ND 设置"></li>
<li>新增一条 IPv6 伪装规则，将分流的流量出口地址伪装为 RouterOS 发出，使回程流量正常响应（反正本来就是代理流量，无所谓公网和无法嗅探真实地址）<br><img src="/images/2025/1_13.png" alt="IPv6 防火墙设置"></li>
</ol>
<blockquote>
<p>General</p>
</blockquote>
<ul>
<li>Dst.Address List： 目标地址列表，选择 CN 和 前面的空白方块 [!] ，表示目标地址不在 CN 列表中时才命中规则</li>
<li>Routing Mark： 选择之前添加的路由表，表示仅处理已被标记的包</li>
</ul>
<blockquote>
<p>Action</p>
</blockquote>
<ul>
<li>Action：  masquerade  将源地址从 OpenWrt 伪装为 RouterOS，以正常响应回程包</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/ipv6 firewall nat</span><br><span class="line">add action=masquerade chain=srcnat comment=&quot;defconf: masquerade IPv6&quot; \</span><br><span class="line">    dst-address-list=!CN routing-mark=openwrt</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>IPv4 其实也可以这样处理<br><img src="/images/2025/1_14.png" alt="IPv4 防火墙设置"></li>
</ol>
]]></content>
      <categories>
        <category>RouterOS</category>
      </categories>
      <tags>
        <tag>RouterOS</tag>
        <tag>ROS</tag>
        <tag>ROS 分流</tag>
        <tag>ROS IPv4 分流</tag>
        <tag>ROS IPv6分流</tag>
      </tags>
  </entry>
  <entry>
    <title>【Proxmox VE】PVE 首页显示 CPU、主板、NVME、硬盘 温度等信息</title>
    <url>/2022/06/18/%E3%80%90Proxmox%20VE%E3%80%91PVE%20%E9%A6%96%E9%A1%B5%E6%98%BE%E7%A4%BA%20CPU%E3%80%81%E4%B8%BB%E6%9D%BF%E3%80%81NVME%E3%80%81%E7%A1%AC%E7%9B%98%20%E6%B8%A9%E5%BA%A6%E7%AD%89%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li></li>
</ul>
<p>网上各种版本的 PVE 首页温度 DIY 脚本，但萝卜青菜各有所爱，总是难得遇到钟情的那一款<br>自行 DIY 的话，正则 + js 入门确实需要点门槛<br>所以这里提供另一种实现方式 json，清晰明了，便于阅读，修改简单<br>无论是 温度、风扇转速、硬盘温度、硬盘信息都可以轻松搞定</p>
<p><img src="/images/2022/6_1.png"><br><img src="/images/2022/6_2.png"></p>
<span id="more"></span>
<hr>
<h4 id="出错原因及处理方式"><a href="#出错原因及处理方式" class="headerlink" title="出错原因及处理方式"></a>出错原因及处理方式</h4><ol>
<li><strong>首页转圈，只显示一部分数据</strong><br>一般都是由于参数值读取错误造成的<br>假设代码片段中有如下参数<br><code>var temperature = value[&#39;temperature&#39;][&#39;current&#39;].toFixed(1);</code><br>但硬盘 smartctl 返回值中没有温度值、或键值名称不一致，就会造成参数读取错误，首页转圈<br><img src="/images/2022/6_3.png"></li>
<li><strong>首页转圈，所有自定义数据都不能显示</strong><br>检查 CPU 温度代码段，是否有代码错误(参照第一条)<br>如修改了 Nodes.pm 文件，需要使用 systemctl restart pveproxy 命令重载 PVE 界面<br>仅修改 js 文件的情况下，无需重载 PVE 界面，浏览器强制刷新就能看到修改后的结果</li>
<li><strong>首页白屏，什么都不显示</strong><br>一般都是代码有误引起的，请还原文件重新操作，或检查代码是否缺少相对应的 {} , () 等符号</li>
<li><strong>中文乱码</strong><br>请不要将文件拖到本地使用 <strong>记事本</strong> 操作，直接在 <strong>WinSCP</strong> 中操作，或在本地使用 <strong>Notepad</strong> 等软件进行编辑<br>如操作无误依然乱码，请检查终端软件及 <strong>WinSCP</strong> 的编码设置，并在 PVE 终端中输入<br><code>export LC_ALL=en_US.UTF-8</code></li>
<li><strong>无报错，但显示不全</strong><br>参考文末，修改显示范围</li>
</ol>
<hr>
<h4 id="前置命令"><a href="#前置命令" class="headerlink" title="前置命令"></a>前置命令</h4><p># 更新软件包列表：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure>
<p># 安装lm-sensors：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install lm-sensors patch</span><br></pre></td></tr></table></figure>
<p># 初始化 sensors (一路yes，回车):</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sensors-detect</span><br></pre></td></tr></table></figure>
<p># 给予 smartctl 权限 (如不需要硬盘信息可以忽略):</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod +s /usr/sbin/smartctl</span><br></pre></td></tr></table></figure>
<p># 设置 PVE 编码为 UTF-8 (如 PVE 安装时正确选择了 china 地区可以忽略):</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export LC_ALL=en_US.UTF-8</span><br></pre></td></tr></table></figure>
<p># 获取温度信息，查看可以设置的数据：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sensors</span><br></pre></td></tr></table></figure>
<p># 这个时候是没有风扇等信息的，需要重启 (如不需要风扇转速信息可以忽略)：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>

<h4 id="备份原文件"><a href="#备份原文件" class="headerlink" title="备份原文件"></a>备份原文件</h4><p>如命令未错误输入，文件备份在原文件相同目录下<br>如 ： &#x2F;usr&#x2F;share&#x2F;perl5&#x2F;PVE&#x2F;API2&#x2F;Nodes.pm 备份为 &#x2F;usr&#x2F;share&#x2F;perl5&#x2F;PVE&#x2F;API2&#x2F;Nodes.pm<strong>bak</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">proxmoxlib_js=&quot;/usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js&quot;</span><br><span class="line">Nodes_pm=&quot;/usr/share/perl5/PVE/API2/Nodes.pm&quot;</span><br><span class="line">pvemanagerlib_js=&quot;/usr/share/pve-manager/js/pvemanagerlib.js&quot;</span><br><span class="line">cp $&#123;proxmoxlib_js&#125; $&#123;proxmoxlib_js&#125;bak</span><br><span class="line">cp $&#123;Nodes_pm&#125; $&#123;Nodes_pm&#125;bak</span><br><span class="line">cp $&#123;pvemanagerlib_js&#125; $&#123;pvemanagerlib_js&#125;bak</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="懒人补丁法（若未修改过原文件，已包含高度修改、去除订阅提示，宽度未更改）"><a href="#懒人补丁法（若未修改过原文件，已包含高度修改、去除订阅提示，宽度未更改）" class="headerlink" title="懒人补丁法（若未修改过原文件，已包含高度修改、去除订阅提示，宽度未更改）"></a>懒人补丁法（若未修改过原文件，已包含高度修改、去除订阅提示，宽度未更改）</h4><p>将补丁文件放到 <strong>&#x2F;tmp&#x2F;</strong> 文件夹<br>大版本升级可能依然需要手动修改部分代码，补丁失败的文件及代码行数会在 patch 返回值中显示，请留意<br>如遇页面显示错误，参照上文<br>不保证可用性</p>
<p>2022&#x2F;06&#x2F;16<br>为每一个参数加入了判断语句，应该不会再出错了，但是大概可能会拖慢读取速度 0.xx 秒:<br>强迫症、完美主义者、需要自行添加数据等，自行参照注释版本添加修改<br>M.2 为系统盘，无法休眠调试，代码未处理，需要自行添加<br><a href="/download/PVE_7.2_temperatures.zip" target="_blank">PVE_7.2_temperatures.zip</a><br><a href="/download/PVE_8.0_temperatures.zip" target="_blank">PVE_8.0_temperatures.zip</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">应用补丁(请确认已经备份原文件)</span></span><br><span class="line">patch $&#123;proxmoxlib_js&#125; &lt; /tmp/proxmoxlib_js.patch</span><br><span class="line">patch $&#123;Nodes_pm&#125; &lt; /tmp/Nodes_pm.patch</span><br><span class="line">patch $&#123;pvemanagerlib_js&#125; &lt; /tmp/pvemanagerlib_js.patch</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重载 PVE 界面</span></span><br><span class="line">systemctl restart pveproxy</span><br></pre></td></tr></table></figure>

<h4 id="自行制作补丁"><a href="#自行制作补丁" class="headerlink" title="自行制作补丁"></a>自行制作补丁</h4><p>可以在重装或升级后快速修改文件（大版本升级可能需要手动修改部分代码）<br>生成的补丁文件在 &#x2F;tmp&#x2F; 文件夹：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">proxmoxlib_js=&quot;/usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js&quot;</span><br><span class="line">Nodes_pm=&quot;/usr/share/perl5/PVE/API2/Nodes.pm&quot;</span><br><span class="line">pvemanagerlib_js=&quot;/usr/share/pve-manager/js/pvemanagerlib.js&quot;</span><br><span class="line">diff -uN $&#123;proxmoxlib_js&#125;bak $&#123;proxmoxlib_js&#125;  &gt; /tmp/proxmoxlib_js.patch</span><br><span class="line">diff -uN $&#123;Nodes_pm&#125;bak $&#123;Nodes_pm&#125;  &gt; /tmp/Nodes_pm.patch</span><br><span class="line">diff -uN $&#123;pvemanagerlib_js&#125;bak $&#123;pvemanagerlib_js&#125;  &gt; /tmp/pvemanagerlib_js.patch</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="自行修改文件"><a href="#自行修改文件" class="headerlink" title="自行修改文件"></a>自行修改文件</h4><p><strong>修改 Nodes.pm 文件</strong><br>&#x2F;usr&#x2F;share&#x2F;perl5&#x2F;PVE&#x2F;API2&#x2F;Nodes.pm<br>搜索：$res-&gt;{pveversion} &#x3D; PVE::pvecfg::package()<br>下方添加<br><img src="/images/2022/6_4.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">res-&gt;&#123;sensors_json&#125; = `sensors -j`; <span class="comment"># 获取 CPU 、主板温度及风扇转速</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">res-&gt;&#123;smartctl_nvme_json&#125; = `smartctl -a -j /dev/nvme?`; <span class="comment"># 读取 nvme 硬盘 S.M.A.R.T. 值，获取硬盘寿命、容量、温度等</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">res-&gt;&#123;smartctl_sda_json&#125; = `smartctl -i -n standby /dev/sda|grep <span class="string">&quot;STANDBY&quot;</span> || smartctl -i -n standby /dev/sda|grep <span class="string">&quot;No such device&quot;</span> || smartctl -a -j /dev/sda`; <span class="comment">#先检测硬盘是否为休眠状态，若否，则检查磁盘是否存在，若否，则返回 S.M.A.R.T. 值</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">res-&gt;&#123;smartctl_sdb_json&#125; = `smartctl -i -n standby /dev/sdb|grep <span class="string">&quot;STANDBY&quot;</span> || smartctl -i -n standby /dev/sdb|grep <span class="string">&quot;No such device&quot;</span> || smartctl -a -j /dev/sdb`; <span class="comment">#先检测硬盘是否为休眠状态，若否，则检查磁盘是否存在，若否，则返回 S.M.A.R.T. 值</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">res-&gt;&#123;cpusensors&#125; = `lscpu | grep MHz`; <span class="comment"># 读取 CPU 频率</span></span></span><br></pre></td></tr></table></figure>

<p><strong>关于获取硬盘名称</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsblk | awk &#x27;$NF==&quot;disk&quot; &#123;print $1&#125;&#x27; | sort -u</span><br></pre></td></tr></table></figure>

<hr>
<p>终端输入 <code>sensors -j</code> 命令，我们可以得到类似下面的结果（以下为 CPU 温度值截取）<br>先眼熟一下 JSON 格式的返回值，等下会用到</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;coretemp-isa-0000&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Adapter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISA adapter&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Package id 0&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">         <span class="attr">&quot;temp1_input&quot;</span><span class="punctuation">:</span> <span class="number">38.000</span><span class="punctuation">,</span></span><br><span class="line">         <span class="attr">&quot;temp1_max&quot;</span><span class="punctuation">:</span> <span class="number">84.000</span><span class="punctuation">,</span></span><br><span class="line">         <span class="attr">&quot;temp1_crit&quot;</span><span class="punctuation">:</span> <span class="number">100.000</span><span class="punctuation">,</span></span><br><span class="line">         <span class="attr">&quot;temp1_crit_alarm&quot;</span><span class="punctuation">:</span> <span class="number">0.000</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Core 0&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">         <span class="attr">&quot;temp2_input&quot;</span><span class="punctuation">:</span> <span class="number">34.000</span><span class="punctuation">,</span></span><br><span class="line">         <span class="attr">&quot;temp2_max&quot;</span><span class="punctuation">:</span> <span class="number">84.000</span><span class="punctuation">,</span></span><br><span class="line">         <span class="attr">&quot;temp2_crit&quot;</span><span class="punctuation">:</span> <span class="number">100.000</span><span class="punctuation">,</span></span><br><span class="line">         <span class="attr">&quot;temp2_crit_alarm&quot;</span><span class="punctuation">:</span> <span class="number">0.000</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Core 1&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">         <span class="attr">&quot;temp3_input&quot;</span><span class="punctuation">:</span> <span class="number">38.000</span><span class="punctuation">,</span></span><br><span class="line">         <span class="attr">&quot;temp3_max&quot;</span><span class="punctuation">:</span> <span class="number">84.000</span><span class="punctuation">,</span></span><br><span class="line">         <span class="attr">&quot;temp3_crit&quot;</span><span class="punctuation">:</span> <span class="number">100.000</span><span class="punctuation">,</span></span><br><span class="line">         <span class="attr">&quot;temp3_crit_alarm&quot;</span><span class="punctuation">:</span> <span class="number">0.000</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>修改 pvemanagerlib.js 文件</strong><br>&#x2F;usr&#x2F;share&#x2F;pve-manager&#x2F;js&#x2F;pvemanagerlib.js<br>搜索 PVE Manager Version<br>下方添加<br><img src="/images/2022/6_5.png"></p>
<p>原始版本及注释</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	itemId: &#x27;thermal&#x27;,  // thermal 代表了这一段代码的 id ，随便改一下不要重复就行了</span><br><span class="line">	colspan: 2,</span><br><span class="line">	printBar: false,</span><br><span class="line">	title: gettext(&#x27;温度&#x27;),  // 这里表示你想在页面中显示的左侧标题名</span><br><span class="line">	textField: &#x27;sensors_json&#x27;,  // 这里需要填写 Nodes.pm 文件中对应的命令，也就是从哪一个返回值中获取数据</span><br><span class="line">	renderer: function(value) &#123;</span><br><span class="line">		value = JSON.parse(value);  // 使用 JavaScript 内置函数 JSON.parse() 将字符串转换为 JavaScript 对象</span><br><span class="line">		const cpu0 = value[&#x27;coretemp-isa-0000&#x27;][&#x27;Package id 0&#x27;][&#x27;temp1_input&#x27;].toFixed(1);  // 这里表示读取 CPU 温度，对应 sensors -j 输出的 JSON 格式数据，toFixed(1) 表示将数字转换为字符，只保留 (1) 位小数</span><br><span class="line">		const PECI0 = value[&#x27;nct6798-isa-0290&#x27;][&#x27;PECI Agent 0&#x27;][&#x27;temp7_input&#x27;].toFixed(1); // 同上，自行修改</span><br><span class="line">		const pch = value[&#x27;pch_cometlake-virtual-0&#x27;][&#x27;temp1&#x27;][&#x27;temp1_input&#x27;].toFixed(1); // 同上，自行修改</span><br><span class="line">		return `CPU: $&#123;cpu0&#125;°C || 南桥: $&#123;pch&#125; ℃ | 网卡: $&#123;PECI0&#125; ℃`; // return 表示输出值，也就是最后显示在 WEB 页面中的值，&#123;&#125;中填入上几行中定义的变量，格式自行调整 </span><br><span class="line">	&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p><strong><del>加一点细节</del></strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        <span class="attr">itemId</span>: <span class="string">&#x27;thermal&#x27;</span>,</span><br><span class="line">        <span class="attr">colspan</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">printBar</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="title function_">gettext</span>(<span class="string">&#x27;温度&#x27;</span>),</span><br><span class="line">        <span class="attr">textField</span>: <span class="string">&#x27;sensors_json&#x27;</span>,</span><br><span class="line">        <span class="attr">renderer</span>: <span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">                value = value.<span class="title function_">replace</span>(<span class="regexp">/temp([0-9]&#123;1,&#125;)_input/g</span>,<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">                <span class="comment">// Intel</span></span><br><span class="line">                <span class="keyword">if</span> (value.<span class="title function_">indexOf</span>(<span class="string">&quot;coretemp-isa&quot;</span>) != -<span class="number">1</span> ) &#123;</span><br><span class="line">                        value = value.<span class="title function_">replace</span>(<span class="regexp">/coretemp-isa-(.&#123;4&#125;)/g</span>,<span class="string">&#x27;coretemp-isa&#x27;</span>);</span><br><span class="line">                        value = value.<span class="title function_">replace</span>(<span class="regexp">/nct6798-isa-(.&#123;4&#125;)/g</span>,<span class="string">&#x27;nct6798-isa&#x27;</span>);</span><br><span class="line">                        value = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(value);</span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> cpu_Intel = <span class="string">&#x27;CPU: &#x27;</span> + value[<span class="string">&#x27;coretemp-isa&#x27;</span>][<span class="string">&#x27;Package id 0&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> cpu_Intel = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> acpi = <span class="string">&#x27; || 主板:  &#x27;</span> + value[<span class="string">&#x27;acpitz-acpi-0&#x27;</span>][<span class="string">&#x27;temp1&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> acpi = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> pch = <span class="string">&#x27; || 南桥:  &#x27;</span> + value[<span class="string">&#x27;pch_cometlake-virtual-0&#x27;</span>][<span class="string">&#x27;temp1&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> pch = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> pci0 = <span class="string">&#x27; || 网卡:  &#x27;</span> + value[<span class="string">&#x27;nct6798-isa&#x27;</span>][<span class="string">&#x27;PECI Agent 0&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> pci0 = <span class="string">&#x27;&#x27;</span>;&#125;</span><br><span class="line">                        <span class="comment">// 如果存在主板、PCI网卡温度,优先显示</span></span><br><span class="line">                        <span class="keyword">if</span> (cpu_Intel.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; pch.<span class="property">length</span> + acpi.<span class="property">length</span> + pci0.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;cpu_Intel&#125;</span><span class="subst">$&#123;acpi&#125;</span><span class="subst">$&#123;pch&#125;</span><span class="subst">$&#123;pci0&#125;</span>`</span>;</span><br><span class="line">                        <span class="comment">// 如果不存在,显示 CPU 全核温度,最高支持 8 核心</span></span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cpu_Intel.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="keyword">try</span> &#123;<span class="keyword">var</span> cpu0 = <span class="string">&#x27; || 核心 0 : &#x27;</span> + value[<span class="string">&#x27;coretemp-isa&#x27;</span>][<span class="string">&#x27;Core 0&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> cpu0 = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                                <span class="keyword">try</span> &#123;<span class="keyword">var</span> cpu1 = <span class="string">&#x27; | 核心 1 : &#x27;</span> + value[<span class="string">&#x27;coretemp-isa&#x27;</span>][<span class="string">&#x27;Core 1&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> cpu1 = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                                <span class="keyword">try</span> &#123;<span class="keyword">var</span> cpu2 = <span class="string">&#x27; | 核心 2 : &#x27;</span> + value[<span class="string">&#x27;coretemp-isa&#x27;</span>][<span class="string">&#x27;Core 2&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> cpu2 = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                                <span class="keyword">try</span> &#123;<span class="keyword">var</span> cpu3 = <span class="string">&#x27; | 核心 3 : &#x27;</span> + value[<span class="string">&#x27;coretemp-isa&#x27;</span>][<span class="string">&#x27;Core 3&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> cpu3 = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                                <span class="keyword">try</span> &#123;<span class="keyword">var</span> cpu4 = <span class="string">&#x27; | 核心 4 : &#x27;</span> + value[<span class="string">&#x27;coretemp-isa&#x27;</span>][<span class="string">&#x27;Core 4&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> cpu4 = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                                <span class="keyword">try</span> &#123;<span class="keyword">var</span> cpu5 = <span class="string">&#x27; | 核心 5 : &#x27;</span> + value[<span class="string">&#x27;coretemp-isa&#x27;</span>][<span class="string">&#x27;Core 5&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> cpu5 = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                                <span class="keyword">try</span> &#123;<span class="keyword">var</span> cpu6 = <span class="string">&#x27; | 核心 6 : &#x27;</span> + value[<span class="string">&#x27;coretemp-isa&#x27;</span>][<span class="string">&#x27;Core 6&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> cpu6 = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                                <span class="keyword">try</span> &#123;<span class="keyword">var</span> cpu7 = <span class="string">&#x27; | 核心 7 : &#x27;</span> + value[<span class="string">&#x27;coretemp-isa&#x27;</span>][<span class="string">&#x27;Core 7&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> cpu7 = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                                <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;cpu_Intel&#125;</span><span class="subst">$&#123;cpu0&#125;</span><span class="subst">$&#123;cpu1&#125;</span><span class="subst">$&#123;cpu2&#125;</span><span class="subst">$&#123;cpu3&#125;</span><span class="subst">$&#123;cpu4&#125;</span><span class="subst">$&#123;cpu5&#125;</span><span class="subst">$&#123;cpu6&#125;</span><span class="subst">$&#123;cpu7&#125;</span>`</span>;</span><br><span class="line">                        &#125; </span><br><span class="line">                <span class="comment">// AMD</span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value.<span class="title function_">indexOf</span>(<span class="string">&quot;amdgpu-pci&quot;</span>) != -<span class="number">1</span> ) &#123;</span><br><span class="line">                        value = value.<span class="title function_">replace</span>(<span class="regexp">/k10temp-pci-(.&#123;4&#125;)/g</span>,<span class="string">&#x27;k10temp-pci&#x27;</span>);</span><br><span class="line">                        value = value.<span class="title function_">replace</span>(<span class="regexp">/zenpower-pci-(.&#123;4&#125;)/g</span>,<span class="string">&#x27;zenpower-pci&#x27;</span>);</span><br><span class="line">                        value = value.<span class="title function_">replace</span>(<span class="regexp">/amdgpu-pci-(.&#123;4&#125;)/g</span>,<span class="string">&#x27;amdgpu-pci&#x27;</span>);</span><br><span class="line">                        value = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(value);</span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> cpu_amd_k10 = <span class="string">&#x27;CPU: &#x27;</span> + value[<span class="string">&#x27;k10temp-pci&#x27;</span>][<span class="string">&#x27;Tctl&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> cpu_amd_k10 = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> cpu_amd_zen = <span class="string">&#x27;CPU: &#x27;</span> + value[<span class="string">&#x27;zenpower-pci&#x27;</span>][<span class="string">&#x27;Tctl&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> cpu_amd_zen = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> amdgpu = <span class="string">&#x27; | GPU:  &#x27;</span> + value[<span class="string">&#x27;amdgpu-pci&#x27;</span>][<span class="string">&#x27;edge&#x27;</span>][<span class="string">&#x27;input&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> amdgpu = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;cpu_amd_k10&#125;</span><span class="subst">$&#123;cpu_amd_zen&#125;</span><span class="subst">$&#123;amdgpu&#125;</span>`</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">`提示: CPU 及 主板 温度读取异常`</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;                </span><br><span class="line">        <span class="attr">itemId</span>: <span class="string">&#x27;nvme_ssd&#x27;</span>,</span><br><span class="line">        <span class="attr">colspan</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">printBar</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="title function_">gettext</span>(<span class="string">&#x27;NVME&#x27;</span>),</span><br><span class="line">        <span class="attr">textField</span>: <span class="string">&#x27;smartctl_nvme_json&#x27;</span>,</span><br><span class="line">        <span class="attr">renderer</span>: <span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">                value = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(value);</span><br><span class="line">                <span class="keyword">if</span> (value[<span class="string">&#x27;model_name&#x27;</span>]) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> model_name = value[<span class="string">&#x27;model_name&#x27;</span>];&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> model_name = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> percentage_used = <span class="string">&#x27; | 使用寿命: &#x27;</span> + value[<span class="string">&#x27;nvme_smart_health_information_log&#x27;</span>][<span class="string">&#x27;percentage_used&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">0</span>) + <span class="string">&#x27;% &#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> percentage_used = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> data_units_read = value[<span class="string">&#x27;nvme_smart_health_information_log&#x27;</span>][<span class="string">&#x27;data_units_read&#x27;</span>]*<span class="number">512</span>/<span class="number">1024</span>/<span class="number">1024</span>/<span class="number">1024</span>;<span class="keyword">var</span> data_units_read = <span class="string">&#x27;(读: &#x27;</span> + data_units_read.<span class="title function_">toFixed</span>(<span class="number">2</span>) + <span class="string">&#x27;TB, &#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> data_units_read = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> data_units_written = value[<span class="string">&#x27;nvme_smart_health_information_log&#x27;</span>][<span class="string">&#x27;data_units_written&#x27;</span>]*<span class="number">512</span>/<span class="number">1024</span>/<span class="number">1024</span>/<span class="number">1024</span>;<span class="keyword">var</span> data_units_written = <span class="string">&#x27;写: &#x27;</span> + data_units_written.<span class="title function_">toFixed</span>(<span class="number">2</span>) + <span class="string">&#x27;TB)&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> data_units_written = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> power_on_time = <span class="string">&#x27; | 通电: &#x27;</span> + value[<span class="string">&#x27;power_on_time&#x27;</span>][<span class="string">&#x27;hours&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">0</span>) + <span class="string">&#x27;小时&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> power_on_time = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> temperature = <span class="string">&#x27; | 温度: &#x27;</span> + value[<span class="string">&#x27;temperature&#x27;</span>][<span class="string">&#x27;current&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> temperature = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;model_name&#125;</span><span class="subst">$&#123;percentage_used&#125;</span><span class="subst">$&#123;data_units_read&#125;</span><span class="subst">$&#123;data_units_written&#125;</span><span class="subst">$&#123;power_on_time&#125;</span><span class="subst">$&#123;temperature&#125;</span>`</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">                        <span class="keyword">return</span> <span class="string">`提示: 未安装硬盘或已直通硬盘控制器`</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">        <span class="attr">itemId</span>: <span class="string">&#x27;SATA_sda&#x27;</span>,</span><br><span class="line">        <span class="attr">colspan</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">printBar</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="title function_">gettext</span>(<span class="string">&#x27;SATA_sda&#x27;</span>),</span><br><span class="line">        <span class="attr">textField</span>: <span class="string">&#x27;smartctl_sda_json&#x27;</span>,</span><br><span class="line">        <span class="attr">renderer</span>: <span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (value.<span class="title function_">indexOf</span>(<span class="string">&quot;Device is in STANDBY mode&quot;</span>) != -<span class="number">1</span> ) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">`提示: 磁盘休眠中`</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value.<span class="title function_">indexOf</span>(<span class="string">&quot;No such device&quot;</span>) != -<span class="number">1</span> ) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">`提示: 未安装硬盘或已直通硬盘控制器`</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                value = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(value);</span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> model_name = value[<span class="string">&#x27;model_name&#x27;</span>];&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> model_name = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> user_capacity = value[<span class="string">&#x27;user_capacity&#x27;</span>][<span class="string">&#x27;bytes&#x27;</span>]/<span class="number">1024</span>/<span class="number">1024</span>/<span class="number">1024</span>;<span class="keyword">var</span> user_capacity = <span class="string">&#x27; | 容量: &#x27;</span> + user_capacity.<span class="title function_">toFixed</span>(<span class="number">2</span>) + <span class="string">&#x27; GB&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> user_capacity = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> power_on_time = <span class="string">&#x27; | 已通电: &#x27;</span> + value[<span class="string">&#x27;power_on_time&#x27;</span>][<span class="string">&#x27;hours&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">0</span>) + <span class="string">&#x27; 小时&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> power_on_time = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> error_count = value[<span class="string">&#x27;ata_smart_error_log&#x27;</span>][<span class="string">&#x27;summary&#x27;</span>][<span class="string">&#x27;count&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">0</span>);<span class="keyword">if</span> (error_count != <span class="number">0</span>)&#123;error_count = <span class="string">&#x27; | 磁盘错误: &#x27;</span> + error_count;&#125; <span class="keyword">else</span> &#123;<span class="keyword">var</span> error_count = <span class="string">&#x27;&#x27;</span>;&#125; &#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> error_count = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> self_count = value[<span class="string">&#x27;ata_smart_self_test_log&#x27;</span>][<span class="string">&#x27;standard&#x27;</span>][<span class="string">&#x27;error_count_total&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">0</span>);<span class="keyword">if</span> (self_count != <span class="number">0</span>)&#123;self_count = <span class="string">&#x27; | 自检错误: &#x27;</span> + self_count;&#125; <span class="keyword">else</span> &#123;<span class="keyword">var</span> self_count = <span class="string">&#x27;&#x27;</span>;&#125; &#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> self_count = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> temperature = <span class="string">&#x27; | 温度: &#x27;</span> + value[<span class="string">&#x27;temperature&#x27;</span>][<span class="string">&#x27;current&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> temperature = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;model_name&#125;</span><span class="subst">$&#123;user_capacity&#125;</span><span class="subst">$&#123;power_on_time&#125;</span><span class="subst">$&#123;error_count&#125;</span><span class="subst">$&#123;self_count&#125;</span><span class="subst">$&#123;temperature&#125;</span>`</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">        <span class="attr">itemId</span>: <span class="string">&#x27;SATA_sdb&#x27;</span>,</span><br><span class="line">        <span class="attr">colspan</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">printBar</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="title function_">gettext</span>(<span class="string">&#x27;SATA_sdb&#x27;</span>),</span><br><span class="line">        <span class="attr">textField</span>: <span class="string">&#x27;smartctl_sdb_json&#x27;</span>,</span><br><span class="line">        <span class="attr">renderer</span>: <span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (value.<span class="title function_">indexOf</span>(<span class="string">&quot;Device is in STANDBY mode&quot;</span>) != -<span class="number">1</span> ) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">`提示: 磁盘休眠中`</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value.<span class="title function_">indexOf</span>(<span class="string">&quot;No such device&quot;</span>) != -<span class="number">1</span> ) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">`提示: 未安装硬盘或已直通硬盘控制器`</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                value = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(value);</span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> model_name = value[<span class="string">&#x27;model_name&#x27;</span>];&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> model_name = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> user_capacity = value[<span class="string">&#x27;user_capacity&#x27;</span>][<span class="string">&#x27;bytes&#x27;</span>]/<span class="number">1024</span>/<span class="number">1024</span>/<span class="number">1024</span>;<span class="keyword">var</span> user_capacity = <span class="string">&#x27; | 容量: &#x27;</span> + user_capacity.<span class="title function_">toFixed</span>(<span class="number">2</span>) + <span class="string">&#x27; GB&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> user_capacity = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> power_on_time = <span class="string">&#x27; | 已通电: &#x27;</span> + value[<span class="string">&#x27;power_on_time&#x27;</span>][<span class="string">&#x27;hours&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">0</span>) + <span class="string">&#x27; 小时&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> power_on_time = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> error_count = value[<span class="string">&#x27;ata_smart_error_log&#x27;</span>][<span class="string">&#x27;summary&#x27;</span>][<span class="string">&#x27;count&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">0</span>);<span class="keyword">if</span> (error_count != <span class="number">0</span>)&#123;error_count = <span class="string">&#x27; | 磁盘错误: &#x27;</span> + error_count;&#125; <span class="keyword">else</span> &#123;<span class="keyword">var</span> error_count = <span class="string">&#x27;&#x27;</span>;&#125; &#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> error_count = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> self_count = value[<span class="string">&#x27;ata_smart_self_test_log&#x27;</span>][<span class="string">&#x27;standard&#x27;</span>][<span class="string">&#x27;error_count_total&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">0</span>);<span class="keyword">if</span> (self_count != <span class="number">0</span>)&#123;self_count = <span class="string">&#x27; | 自检错误: &#x27;</span> + self_count;&#125; <span class="keyword">else</span> &#123;<span class="keyword">var</span> self_count = <span class="string">&#x27;&#x27;</span>;&#125; &#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> self_count = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">try</span> &#123;<span class="keyword">var</span> temperature = <span class="string">&#x27; | 温度: &#x27;</span> + value[<span class="string">&#x27;temperature&#x27;</span>][<span class="string">&#x27;current&#x27;</span>].<span class="title function_">toFixed</span>(<span class="number">1</span>) + <span class="string">&#x27;°C&#x27;</span>;&#125; <span class="keyword">catch</span>(e) &#123;<span class="keyword">var</span> temperature = <span class="string">&#x27;&#x27;</span>;&#125; </span><br><span class="line">                        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;model_name&#125;</span><span class="subst">$&#123;user_capacity&#125;</span><span class="subst">$&#123;power_on_time&#125;</span><span class="subst">$&#123;error_count&#125;</span><span class="subst">$&#123;self_count&#125;</span><span class="subst">$&#123;temperature&#125;</span>`</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">        <span class="attr">itemId</span>: <span class="string">&#x27;MHz&#x27;</span>,</span><br><span class="line">        <span class="attr">colspan</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">printBar</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="title function_">gettext</span>(<span class="string">&#x27;CPU频率&#x27;</span>),</span><br><span class="line">        <span class="attr">textField</span>: <span class="string">&#x27;cpusensors&#x27;</span>,</span><br><span class="line">        <span class="attr">renderer</span>:<span class="keyword">function</span>(<span class="params">value</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> f0 = value.<span class="title function_">match</span>(<span class="regexp">/CPU MHz.*?([\d]+)/</span>)[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">var</span> f1 = value.<span class="title function_">match</span>(<span class="regexp">/CPU min MHz.*?([\d]+)/</span>)[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">var</span> f2 = value.<span class="title function_">match</span>(<span class="regexp">/CPU max MHz.*?([\d]+)/</span>)[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">return</span> <span class="string">`实时: <span class="subst">$&#123;f0&#125;</span> MHz || 最小: <span class="subst">$&#123;f1&#125;</span> MHz | 最大: <span class="subst">$&#123;f2&#125;</span> MHz `</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>如果是 PVE 8.0，CPU 不再返回实时频率，需要修改为下列代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        itemId: &#x27;MHz&#x27;,</span><br><span class="line">        colspan: 2,</span><br><span class="line">        printBar: false,</span><br><span class="line">        title: gettext(&#x27;CPU频率&#x27;),</span><br><span class="line">        textField: &#x27;cpusensors&#x27;,</span><br><span class="line">        renderer:function(value)&#123;</span><br><span class="line">                var f1 = value.match(/CPU min MHz.*?([\d]+)/)[1];</span><br><span class="line">                var f2 = value.match(/CPU max MHz.*?([\d]+)/)[1];</span><br><span class="line">                var f0 = value.match(/CPU.*scaling MHz.*?([\d]+)/)[1];</span><br><span class="line">                var f0 = f0*f2/100;</span><br><span class="line">                return `实时: $&#123;f0&#125; MHz || 最小: $&#123;f1&#125; MHz | 最大: $&#123;f2&#125; MHz `</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure>

<p><strong>修改显示范围</strong><br>依然是 pvemanagerlib.js 文件<br>搜索 widget.pveNodeStatus<br>将 height: 300 （默认值） 改大为 420，或者更大，然后保存（每多一行大概增大 20~25）<br><img src="/images/2022/6_6.png"></p>
<p><strong>重载 PVE 界面</strong><br>修改完成后重载 PVE 界面<br>如无把握，建议不要一次加入太多代码，修改一段就重载一次</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart pveproxy</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Proxmox VE</category>
      </categories>
      <tags>
        <tag>Proxmox VE</tag>
        <tag>PVE</tag>
        <tag>PVE温度显示</tag>
      </tags>
  </entry>
  <entry>
    <title>【RouterOS(ROS)】自动更新分流规则</title>
    <url>/2022/06/09/%E3%80%90RouterOS(ROS)%E3%80%91%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%88%86%E6%B5%81%E8%A7%84%E5%88%99/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><p>分流设置参照 ：<a href="https://www.itxiaoniao.net/archives/448/" title="ROS 分流设置">ROS 分流设置</a></p>
</li>
<li><p>此处不再详述</p>
</li>
<li><p>下载并导入规则</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 下载文件</span><br><span class="line">/tool fetch url=http://www.iwik.org/ipcountry/mikrotik/CN</span><br><span class="line"># 关闭日志输出，避免刷屏</span><br><span class="line">/system logging disable 0</span><br><span class="line"># 载入列表</span><br><span class="line">/import file-name=CN</span><br><span class="line"># 恢复日志输出输出选项</span><br><span class="line">/system logging enable 0</span><br><span class="line"># 查看当前列表数量</span><br><span class="line">:local CN [:len [/ip firewall address-list find list=&quot;CN&quot;]]</span><br><span class="line"># 删除文件</span><br><span class="line">/file remove [find name=&quot;CN&quot;]</span><br><span class="line"># 写入日志</span><br><span class="line">:log info (&quot;CN列表更新:&quot;.&quot;$CN&quot;.&quot;条规则&quot;)</span><br></pre></td></tr></table></figure>

<h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3>]]></content>
      <categories>
        <category>RouterOS</category>
      </categories>
      <tags>
        <tag>RouterOS</tag>
        <tag>ROS</tag>
        <tag>ROS脚本</tag>
        <tag>ROS分流</tag>
      </tags>
  </entry>
  <entry>
    <title>【RouterOS(ROS)】UPNP 设置 - 自动老化及重拨后修改 IP</title>
    <url>/2022/06/09/%E3%80%90RouterOS(ROS)%E3%80%91UPNP%E8%AE%BE%E7%BD%AE-%E8%87%AA%E5%8A%A8%E8%80%81%E5%8C%96%E5%8F%8A%E9%87%8D%E6%8B%A8%E5%90%8E%E4%BF%AE%E6%94%B9IP/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><p>以下脚本命令基于 ROS 7.2.3，其他版本不一定适用</p>
</li>
<li><p><strong>此脚本在 7.9 或更早已经失效，新版本的 ROS 不允许删除动态对象</strong></p>
</li>
<li><p>ROS 开启 UPNP 后，会自动映射端口，所生成的端口映射可以在 IP - Firewall - NAT 中查询，但 ROS 自动生成的端口映射没有老化时间，需要手动进行删除，或使用脚本进行删除，这里记录一下编写的脚本。</p>
</li>
<li><p>upnp 老化（自行设定定时执行）</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/ip firewall nat;</span><br><span class="line">:foreach singleRule in=[find where dynamic=yes] do=&#123;</span><br><span class="line"> :if ([:ping [get $singleRule to-addresses] count=2] &lt; 1) do=&#123;</span><br><span class="line">remove $singleRule</span><br><span class="line">:log warning &quot;*** 删除不可用的 upnp 规则 ***&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<ul>
<li>拨号后自动修改 dst-address （建议 pppoe 接口绑定拨号脚本，然后在 PPP - Profiles 下添加）</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:global addold</span><br><span class="line">:global addnew</span><br><span class="line">:set addnew [/interface get [/interface find name=&quot;pppoe-out1&quot;] running]</span><br><span class="line">:if ($addnew=true) do=&#123;</span><br><span class="line">:set addold [/ip address get [/ip address find dynamic=yes interface=&quot;pppoe-out1&quot;] address]</span><br><span class="line">:set addold [:pick $addold 0 ([:len $addold ] -3)]</span><br><span class="line">/ip firewall nat set [find dynamic=yes comment ~&quot;^upnp*.&quot;] dst-address=$addold</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3>]]></content>
      <categories>
        <category>RouterOS</category>
      </categories>
      <tags>
        <tag>RouterOS</tag>
        <tag>ROS</tag>
        <tag>ROS UPNP</tag>
        <tag>ROS脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>ALL in one 记录一（购买及组装篇-十代主机10400）</title>
    <url>/2022/05/25/ALL%20in%20one%20%E8%AE%B0%E5%BD%95%E4%B8%80%EF%BC%88%E8%B4%AD%E4%B9%B0%E5%8F%8A%E7%BB%84%E8%A3%85%E7%AF%87-%E5%8D%81%E4%BB%A3%E4%B8%BB%E6%9C%BA10400%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前因"><a href="#前因" class="headerlink" title="前因"></a>前因</h2><p>家里使用的是 J4125 小主机，原先只是为了做个软路由，然后挂挂青龙面板薅羊毛，但后来由于媳妇是在用不习惯电视的视频软件（没有弹幕、会员费用高、操作不方便、零零散散的独占节目太多又不想每个都充会员）</p>
<p>于是就在 J4125 上面虚拟化了一个 Windows 作为 HTPC 使用，但这对于 J4125 来说实在是太吃力了 </p>
<p><img src="/images/2022/1_1.png"></p>
<p>尤其是当初装修的时候没规划好，导致弱电设备只能放在酒柜里，散热不太好，一到夏天就开始过热降频，于是打算 618 入手，但最终还是没忍住剁手，希望 618 不会遭受太多背刺（虽然大多东西都是海鲜市场购入）</p>
<p><img src="/images/2022/1_2.jpg" alt="弱电柜" title="弱电柜"></p>
<p>海鲜市场零零散散淘了一个月，前几天终于将配件购买完成。</p>
<p>在这里对踩过的坑，PVE 直通、调试等做一个记录，避免自己忘记，也希望给看到的网友带来一点帮助。</p>
<p><img src="/images/2022/1_3.jpg" alt="成品展示" title="成品展示"></p>
<p><img src="/images/2022/1_4.png" alt="功耗（PVE 打开 ROS+openwrt，空载状态）" title="功耗（PVE 打开 ROS+openwrt，空载状态）"></p>
<span id="more"></span>
<h2 id="配件清单和选购原因"><a href="#配件清单和选购原因" class="headerlink" title="配件清单和选购原因"></a>配件清单和选购原因</h2><p><img src="/images/2022/1_5.jpg" alt="购买备注" title="购买备注"></p>
<h4 id="机箱（第一个坑）："><a href="#机箱（第一个坑）：" class="headerlink" title="机箱（第一个坑）："></a>机箱（第一个坑）：</h4><p>组装 ITX 或者 MATX 主机，一定要先选好机箱再围绕机箱选购其他配件，我一开始就是没挑好机箱就开始买配件，最后又把还在路上的电源给退了，而且如果把内存条插槽的数量降一降，还可以选择更小的主板，但当时我已经在海鲜市场上买好了主板，于是机箱选起来很蛋疼，花了我很久的时间 </p>
<p>因为柜子空间为 80cm<em>36cm</em>50cm，所以只能选择长度小于 32 的机箱（还要考虑插头预留长度），所以 pass 掉了很多机箱，备注都在上图，最终选择了 小喆优品B3全铝MATX机箱 蓝色款，326<em>161</em>275</p>
<p>黑色版还能便宜 40 块，但颜狗还是买了蓝色款。</p>
<p><img src="/images/2022/1_6.jpg" alt="配合弯头电源线，尺寸完美" title="配合弯头电源线，尺寸完美"></p>
<h4 id="CPU"><a href="#CPU" class="headerlink" title="CPU:"></a>CPU:</h4><p>我选择了 I5-10400，同为UHD630的核显， i3-10100 应该就够用了，但是还是比较馋 8核16线程的 10400，因为需要挂载的虚拟机比较多，RouterOS + OpenWrt + NAS + HassOS + Windows + CentOS ，这里可以降低需求，8代9代的价格的话，还不如买10代，还可以选择 QSRK 等不限型号的 CPU，进一步压缩价格。<br>（J4125再次传来不堪重负的声音 ）</p>
<p><img src="/images/2022/1_7.jpg" alt="CPU" title="CPU"></p>
<h4 id="主板（第二个坑）："><a href="#主板（第二个坑）：" class="headerlink" title="主板（第二个坑）："></a>主板（第二个坑）：</h4><p>本来和 CPU 一样，打算 618 京东买盒装，但因为没忍到 618，海鲜市场淘了华擎 Z490m pro4（本来是在 B460m pro4 、钢铁传奇、B460M-HDV-A之中选一个的，但突然刷到一个没背板的z490，看到4个PCI插槽直接就买了，但实际根本没用上 ，还导致了机箱和电源购买差点翻车）</p>
<p>这里要重点说一下，500系列因为要兼容 10、11 系的 CPU，导致如果使用 10 系 CPU 的话，很多主板第一个 m.2 插槽是无法使用的，还好没等到 618 ，不然买了 560 我就傻眼了。</p>
<p>400系主板的话，因为 400 系主板设计原因，基本都是妥协后的产物，根据网上评论还有几个大坑</p>
<h5 id="1-华硕系主板"><a href="#1-华硕系主板" class="headerlink" title="1.华硕系主板"></a>1.华硕系主板</h5><p>存在核显无法开机的问题，可以通过 BIOS、亮机卡等操作恢复（注意别买到相关型号，要买的话，确定 BIOS 升级可以解锁，并升级 BIOS）</p>
<p>详见：</p>
<p><a href="https://tieba.baidu.com/p/6758134915">https://tieba.baidu.com/p/6758134915</a></p>
<p><a href="https://tieba.baidu.com/p/7668455948">https://tieba.baidu.com/p/7668455948</a></p>
<h5 id="2-微星系主板"><a href="#2-微星系主板" class="headerlink" title="2.微星系主板"></a>2.微星系主板</h5><p>部分主板存在 pci、m.2 互相冲突，无法插满或降速的问题，当时怕海鲜市场淘主板记错型号，没选微星</p>
<p>但刚刚搜百度发现问题主要存在360、450、560主板，完全没问题</p>
<p>详见：</p>
<p><a href="https://nga.178.com/read.php?tid=19129452&forder_by=postdatedesc">https://nga.178.com/read.php?tid=19129452&amp;forder_by=postdatedesc</a></p>
<p><a href="https://www.chiphell.com/thread-2320570-1-1.html">https://www.chiphell.com/thread-2320570-1-1.html</a></p>
<p><a href="https://tieba.baidu.com/p/6761957926">https://tieba.baidu.com/p/6761957926</a></p>
<h5 id="3-技嘉系主板"><a href="#3-技嘉系主板" class="headerlink" title="3.技嘉系主板"></a>3.技嘉系主板</h5><p>没有理由，不买</p>
<h5 id="4-华擎系主板"><a href="#4-华擎系主板" class="headerlink" title="4.华擎系主板"></a>4.华擎系主板</h5><p>B460M RRO4、B460M 钢铁传奇、华擎 B460M-HDV-A、华擎 Z490M RRO4 均无 PCI 、M.2 冲突</p>
<p>华擎系主板均选择了 M.2 插槽和 SATA 冲突，插入第一个 M.2 会导致禁用一个 SATA 接口，如果是为了 NAS 使用慎选</p>
<p>详见：</p>
<p><a href="https://www.asrock.com/mb/Intel/B460M%20Pro4/index.tw.asp#Specification">https://www.asrock.com/mb/Intel/B460M%20Pro4/index.tw.asp#Specification</a></p>
<h5 id="5-其他"><a href="#5-其他" class="headerlink" title="5.其他"></a>5.其他</h5><p>精力有限，没看</p>
<h4 id="电源："><a href="#电源：" class="headerlink" title="电源："></a>电源：</h4><p>再重复一遍，一定要先选好机箱再买 主板、电源、散热器</p>
<p>都怪京东送了一张 -30 的优惠券，买了 ATX 电源，后来发现跟 24*24 的标准板放一起，直接超尺寸，于是路上就被我退了。</p>
<p>功率算出来满载是 100~150 ，但实在找不到这么小的电源，用 DC 电源、1U 什么的又怕翻车，老老实实京东买了 SFX 铜牌</p>
<h4 id="硬盘："><a href="#硬盘：" class="headerlink" title="硬盘："></a>硬盘：</h4><p>还是因为怕翻车，买了三星，简单说一下</p>
<p>970 EVO Plus：速度快、但发热量高、有缓存设计</p>
<p>980：速度慢一些，性价比高、无缓存设计、发热低</p>
<p>因为担心 PVE 断电丢配置啥的，买了有缓存的 970  </p>
<h4 id="网卡："><a href="#网卡：" class="headerlink" title="网卡："></a>网卡：</h4><p>本来想买 I350 的，因为馋 SR-IOV ，但价格实在太高了，还都是寨卡（担心啸叫等问题），最后还是买了 I340 富士通版本<br><img src="/images/2022/1_8.jpg" alt="I340" title="I340"></p>
<p>软路由常见型号和对比详见：</p>
<p><a href="https://www.bilibili.com/read/cv15982632">https://www.bilibili.com/read/cv15982632</a></p>
<p>寨卡分辨等：</p>
<p><a href="https://www.chiphell.com/thread-2148116-1-1.html">https://www.chiphell.com/thread-2148116-1-1.html</a></p>
<h4 id="散热器："><a href="#散热器：" class="headerlink" title="散热器："></a>散热器：</h4><p>其实这个是无用需求，玩虚拟机，放柜子里看不到，拷机温度不超过60，买什么 RGB ，我也不知道 :fa-frown-o:</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>因为重要的配件直接京东某宝，所以的确没有翻车，但其实价格方面没有便宜很多，但因为长年外地出差，担心翻车没法处理，还是没省这个钱。</p>
<p>没改功耗墙什么的，拷机的时候全核 4.0 只能保持大概 20s（功耗 100w） ，然后就降频到 3.2G（功耗 65w）</p>
<p>没改 BIOS 的话，空载（PVE 只开 ROS、openwrt ，无网络负载）功耗大概是 30<del>32w，稍稍开了一点节能选项（CPU 开到 C6），待机功率降到 25</del>26w，算是比较满足了</p>
<p>本来设置了风扇按温度开关，但实际发现根本多不了什么功耗，索性一直转了。</p>
<p>功耗方面稍稍有点高，主要原因应该还是电源买大了转化率不够高（印象里一般来说电源50%左右转化率最高，DC 电源就更好一点）</p>
<p>机箱的话还算比较好装，毕竟挺大的，唯一蛋疼的就是装了底部风扇之后，第四个 PCI 插槽被完全挡住了，以后升万兆大概只能拆风扇，或者换 X1 插槽的千兆卡了。</p>
<p>总体来说比较满意。</p>
<p>下一篇再写 PVE 的安装 和直通等。</p>
<p><img src="/images/2022/1_9.jpg" alt="机箱内部" title="机箱内部"></p>
<p><img src="/images/2022/1_10.jpg" alt="点亮和拷机测试" title="点亮和拷机测试"></p>
<p><img src="/images/2022/1_11.jpg" alt="娱乐大师跑分" title="娱乐大师跑分"></p>
<p><img src="/images/2022/1_12.png" alt=" " title=" "></p>
<h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3>]]></content>
  </entry>
  <entry>
    <title>ALL in one 记录二（PVE 初装设置&amp;核显直通&amp;HTPC相关设置）</title>
    <url>/2022/05/25/ALL%20in%20one%20%E8%AE%B0%E5%BD%95%E4%BA%8C%EF%BC%88PVE%20%E5%88%9D%E8%A3%85%E8%AE%BE%E7%BD%AE%E3%80%81%E6%A0%B8%E6%98%BE%E7%9B%B4%E9%80%9A%E3%80%81HTPC%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>因为新购入了主机，需要重新调试 PVE ，在这里做一些记录</p>
<h2 id="PVE初装"><a href="#PVE初装" class="headerlink" title="PVE初装"></a>PVE初装</h2><h4 id="1-BIOS设置"><a href="#1-BIOS设置" class="headerlink" title="1. BIOS设置"></a>1. BIOS设置</h4><p>1）debian 默认 BIOS 时间为 UTC 时间，时间不对的情况下会造成主机开启关闭状态显示不正常，并造成令牌验证失败频繁退出登录，所以最好调整 BIOS 时间为 UTC 时间<br>PVE 安装时间同步软件也可以，但是初装电脑，开机网络不通的时候虚拟机开关会造成以上问题，所以推荐直接改 BIOS 时间<br>2）确认开启虚拟化<br>根据需要确认开启或关闭 CSM 、CPU 节能、板载声卡、来电自启动等选项（CPU C6&#x2F;C7&#x2F;C10 等节能请确认硬件支持再开启，以免造成低负载随机死机）</p>
<h4 id="2-PVE安装"><a href="#2-PVE安装" class="headerlink" title="2. PVE安装"></a>2. PVE安装</h4><p>官网下载镜像：<a href="https://www.proxmox.com/en/downloads">https://www.proxmox.com/en/downloads</a><br>使用 U盘刻录软件刻录即可，我这里使用的是 balenaEtcher<br>为了方便设置管理口，只插上一根自动分配IP的网线到要要设置的管理口上，IP 可以在安装界面上更改，主要是为了分辨网口编号<br>（尽量不要使用板载网卡，有些主板官方内核板载网卡、板载声卡等设备无法拆分，会导致后续声卡直通时出问题，我这里从 I340T4 里面选了一个口作为管理口使用）</p>
<h4 id="3-PVE设置"><a href="#3-PVE设置" class="headerlink" title="3. PVE设置"></a>3. PVE设置</h4><h5 id="1）删除-local-lvm-分区，只留下-local-分区"><a href="#1）删除-local-lvm-分区，只留下-local-分区" class="headerlink" title="1）删除 local-lvm 分区，只留下 local 分区"></a>1）删除 local-lvm 分区，只留下 local 分区</h5><p>避免空间浪费，而且 PVE 首页上显示的空间剩余指的是 local 分区，我使用 J4125 的时候就发生过一次 local-lvm 塞满造成的 IO-err，推荐新装 PVE 时进行设置，不然还要备份还原虚拟机，比较麻烦</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lvremove pve/data</span><br><span class="line">lvextend -l +100%FREE -r pve/root</span><br></pre></td></tr></table></figure>
<p>数据中心-存储-删除local-lvm<br>选择local，编辑，在内容里添加磁盘映像和容器<br>如果需要还原之前的虚拟机，则需要使用如下命令（无法使用 WEB 页面还原，因为储存位置不一致）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">qmrestore /var/lib/vz/dump/vzdump-qemu-101-2022_05_19-19_07_41.vma.zst 101 -storage local</span><br></pre></td></tr></table></figure>
<h5 id="2）换源、关闭订阅、首页温度提示等操作"><a href="#2）换源、关闭订阅、首页温度提示等操作" class="headerlink" title="2）换源、关闭订阅、首页温度提示等操作"></a>2）换源、关闭订阅、首页温度提示等操作</h5><p>参考：<br><a href="https://github.com/xiangfeidexiaohuo/ProxmoxVE-7.0-DIY">https://github.com/xiangfeidexiaohuo/ProxmoxVE-7.0-DIY</a><br><a href="http://songw.top/archives/748.html">http://songw.top/archives/748.html</a><br><a href="https://zry.io/archives/285">https://zry.io/archives/285</a></p>
<span id="more"></span>
<p>3）主页显示温度<br>使用环境：<br>sensors 有风扇（fan:）、CPU温度（Package id 0:）、PCI温度（PECI Agent 0: ）输出，一块 NVME、两块 SATA<br>恩山代码已做空值错误处理<br>详细说明：<br><a href="https://www.right.com.cn/forum/thread-8236620-1-1.html">https://www.right.com.cn/forum/thread-8236620-1-1.html</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新软件包列表：</span></span><br><span class="line">apt-get update </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装lm-sensors：</span></span><br><span class="line">apt-get install lm-sensors</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">初始化 sensors(一路<span class="built_in">yes</span>，回车)：</span></span><br><span class="line">sensors-detect</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">给予 smartctl 权限（如不需要硬盘信息可以忽略）</span></span><br><span class="line">chmod +s /usr/sbin/smartctl</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取温度信息：</span></span><br><span class="line">sensors</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这个时候是没有风扇等信息的，需要重启：</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份</span></span><br><span class="line">proxmoxlib_js=&quot;/usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js&quot;</span><br><span class="line">Nodes_pm=&quot;/usr/share/perl5/PVE/API2/Nodes.pm&quot;</span><br><span class="line">pvemanagerlib_js=&quot;/usr/share/pve-manager/js/pvemanagerlib.js&quot;</span><br><span class="line">cp $&#123;proxmoxlib_js&#125; $&#123;proxmoxlib_js&#125;bak</span><br><span class="line">cp $&#123;Nodes_pm&#125; $&#123;Nodes_pm&#125;bak</span><br><span class="line">cp $&#123;pvemanagerlib_js&#125; $&#123;pvemanagerlib_js&#125;bak</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">应用补丁</span></span><br><span class="line">patch $&#123;proxmoxlib_js&#125; &lt; /tmp/proxmoxlib_js.patch</span><br><span class="line">patch $&#123;Nodes_pm&#125; &lt; /tmp/Nodes_pm.patch</span><br><span class="line">patch $&#123;pvemanagerlib_js&#125; &lt; /tmp/pvemanagerlib_js.patch</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重载 PVE 界面</span></span><br><span class="line">systemctl restart pveproxy</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">制作补丁</span></span><br><span class="line">proxmoxlib_js=&quot;/usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js&quot;</span><br><span class="line">Nodes_pm=&quot;/usr/share/perl5/PVE/API2/Nodes.pm&quot;</span><br><span class="line">pvemanagerlib_js=&quot;/usr/share/pve-manager/js/pvemanagerlib.js&quot;</span><br><span class="line">diff -uN $&#123;proxmoxlib_js&#125;bak $&#123;proxmoxlib_js&#125;  &gt; /tmp/proxmoxlib_js.patch</span><br><span class="line">diff -uN $&#123;Nodes_pm&#125;bak $&#123;Nodes_pm&#125;  &gt; /tmp/Nodes_pm.patch</span><br><span class="line">diff -uN $&#123;pvemanagerlib_js&#125;bak $&#123;pvemanagerlib_js&#125;  &gt; /tmp/pvemanagerlib_js.patch</span><br></pre></td></tr></table></figure>
<p><img src="/images/2022/2_1.png" alt="页面效果"></p>
<h4 id="4-直通篇"><a href="#4-直通篇" class="headerlink" title="4. 直通篇"></a>4. 直通篇</h4><p>大同小异，只说一些坑和一些配置说明</p>
<h5 id="1）-etc-default-grub-文件"><a href="#1）-etc-default-grub-文件" class="headerlink" title="1）&#x2F;etc&#x2F;default&#x2F;grub 文件"></a>1）&#x2F;etc&#x2F;default&#x2F;grub 文件</h5><p>据说 video&#x3D;vesafb:off,efifb:off 已经无法使用（大概在7.x版本）<br>需要改成 video&#x3D;vesafb:off video&#x3D;efifb:off<br>如果是 pve-kernel 5.15 可能还需要 video&#x3D;simplefb:off<br>详见：<br><a href="https://forum.proxmox.com/threads/pve7-failed-to-mmap-xxxx-xx-xx-x-bar-3-performance-may-be-slow.108129/">https://forum.proxmox.com/threads/pve7-failed-to-mmap-xxxx-xx-xx-x-bar-3-performance-may-be-slow.108129/</a><br><a href="https://forum.proxmox.com/threads/gpu-passthrough-not-working-bar-3.60996/">https://forum.proxmox.com/threads/gpu-passthrough-not-working-bar-3.60996/</a></p>
<h5 id="2）直通分组"><a href="#2）直通分组" class="headerlink" title="2）直通分组"></a>2）直通分组</h5><p>如果你的硬件分组像我这样子，即使在 &#x2F;etc&#x2F;default&#x2F;grub 文件中添加了 pcie_acs_override&#x3D;downstream 参数依然无法拆分<br>    00:1f.3  9  Audio device: Intel Corporation Comet Lake PCH cAVS<br>    00:1f.4  9  SMBus: Intel Corporation Comet Lake PCH SMBus Controller<br>    00:1f.5  9  Serial bus controller [0c80]: Intel Corporation Comet Lake PCH SPI Controller<br>    00:1f.6  9  Ethernet controller: Intel Corporation Ethernet Connection (11) I219-V<br>有以下解决方案</p>
<ul>
<li>自行编译内核拆分设备</li>
<li>对这台虚拟机直通该分组下的所有设备（或者点击直通所有功能，如果这样做，该分组下所有设备都将不能被其他虚拟机使用，尤其要确认你的管理网口不在这个分组下）<br><img src="/images/2022/2_3.png"></li>
</ul>
<h5 id="3）直通设备数量"><a href="#3）直通设备数量" class="headerlink" title="3）直通设备数量"></a>3）直通设备数量</h5><p>PVE 模拟了主板的真实工作状态，所以 PCI、SATA、USB 都是有直通上限的，如果使用了超过上限的直通设备（包括写在 &#x2F;etc&#x2F;pve&#x2F;nodes&#x2F;pve&#x2F;qemu-server&#x2F;xxx.conf 文件下的直通设备），开机会就会报 400 错误<br><img src="/images/2022/2_2.png" alt="400 错误"><br>    Parameter verification failed. (400)<br>    undefined: property is not defined in schema and the schema does not allow additional properties<br>有以下解决方案</p>
<ul>
<li>编辑 &#x2F;etc&#x2F;pve&#x2F;nodes&#x2F;pve&#x2F;qemu-server&#x2F;xxx.conf 文件，使用这样的参数（可能需要这些设备在一个分组下）<br><code>hostpci1: 00:1f.3;00:1f.4;00:1f.5;00:1f.6</code></li>
<li>直通整个分组（修改文件或在 WEB 页面中选中 所有功能）<br><code>hostpci1: 00:1f</code></li>
<li>直通整个控制器，如 USB 控制器<br><code>00:14.0 USB controller: Intel Corporation Comet Lake USB 3.1 xHCI Host Controller</code><br><img src="/images/2022/2_4.png" alt="我的配置参考"><br>官方WIKI：<a href="https://pve.proxmox.com/wiki/Pci_passthrough">https://pve.proxmox.com/wiki/Pci_passthrough</a></li>
</ul>
<h5 id="4）无法开机、驱动装上了也没有画面"><a href="#4）无法开机、驱动装上了也没有画面" class="headerlink" title="4）无法开机、驱动装上了也没有画面"></a>4）无法开机、驱动装上了也没有画面</h5><ul>
<li>尝试使用 romfile 选项<br>自行提取<br>参考：<a href="https://foxi.buduanwang.vip/virtualization/pve/1602.html/">https://foxi.buduanwang.vip/virtualization/pve/1602.html/</a><br>请确定在传统模式下启动，否则会出现 -bash: rom: Permission denied 等报错<br>从 BIOS 中提取<br>参考：<a href="https://www.gitloc.com/archives/131.html">https://www.gitloc.com/archives/131.html</a><br>我这边 10400(UHD630) &amp; 华擎 z490m pro4 可以用的 romfile<br>链接: <a href="https://pan.baidu.com/s/1FkrOBo2p1jaKUdnrXIZ1bA?pwd=8995">https://pan.baidu.com/s/1FkrOBo2p1jaKUdnrXIZ1bA?pwd=8995</a> 提取码: 8995<br><strong>备注，从 BIOS 中提取的 romfile，修复 ROM 的设备通道 ID 有时会造成文件失效，原因不明（也许大概是加密问题）</strong></li>
<li>尝试使用其他视频接口<br>我现在使用的  华擎 z490m pro4 直通后 HDMI 无信号输出，只有 VGA 和 DP 接口使用正常，大概类似于黑苹果无法使用 HDMI 口（其实 romfile 应该还是有用，我懒得折腾了，反正能用了）<br>参考：<a href="https://apple.sqlsec.com/6-%E5%AE%9E%E7%94%A8%E5%A7%BF%E5%8A%BF/6-13.html">https://apple.sqlsec.com/6-实用姿势/6-13.html</a></li>
</ul>
<h2 id="一些别的坑"><a href="#一些别的坑" class="headerlink" title="一些别的坑"></a>一些别的坑</h2><ul>
<li><p>因为开始的时候没有 DP 转接头，我也不确定 DP 接口有没有信号输出，想着干脆做 GVT-G 让群晖和 Windows 都能用上核显算了，于是买了 USB 转 HDMI ，然后手贱觉得 type-c 比较小巧还有弯头可选<br>买回来之后才知道台式机 type-c 不是全功能 C 口，根本无法传输视频信号，并且 type-c 视频输出其实也是走的 DP 输出，对于我当时的情况无济于事<br>所以如果要做 GVT-G 和视频输出，认准这几个字 “<strong>USB外置显卡</strong>“！（因为不确定这玩意解码到底走的 GPU 还是 CPU 或者是外置显卡本身，我最后还是放弃了，还好 DP 信号正常）<br><del>其实还是翻车了，69 的某绿转接头时不时黑屏闪屏，1080P 勉强能用，4K 压根就是残废，DP 接口对线材要求实在太高了</del></p>
</li>
<li><p>华擎主板 改显存，增加 GVT-G “显卡” 需要使用这个引导<br><a href="https://github.com/XDleader555/grub_setup_var">https://github.com/XDleader555/grub_setup_var</a><br>指令参考（我这个主板实测只能改到 512m，1G无法开机，老老实实扣电池）</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">setup_var SaSetup 0xAF 0x3</span><br></pre></td></tr></table></figure>
<ul>
<li><p>PVE 7.1&#x2F;7.2 某些内核直通可能存在问题，需要尝试更换内核<br>7.2 版本默认内核貌似无法使用 UPT 模式直通核显（Legacy 模式无影响）<br><strong>据说</strong>正常可用的版本有 5.13.19-4-pve<br>参考：<a href="https://www.jianshu.com/p/822c167d0c3a">https://www.jianshu.com/p/822c167d0c3a</a></p>
</li>
<li><p>虚拟机 Windows 关机后 HDMI 无声音<br>原因不明，临时解决方案</p>
</li>
</ul>
<ol>
<li>不要使用关机选项，用休眠替代（重启或关机后无声音，也可以用休眠后重新开机恢复，奇葩的 bug）<br><em>注：如果 Windows 开启休眠，无法正常唤醒（唤醒变重启等），请尝试更换驱动、romfile 文件</em></li>
<li>使用 USB 声卡或板载声卡接口输出音频（这是无奈之选，如果要接到电视这种设备，没有 3.5mm 音频口又各种尝试失败的话，VGA+3.5mm 转 HDMI，效果嘛…………:fa-meh-o::fa-meh-o::fa-meh-o::fa-meh-o:）<br><img src="/images/2022/2_5.png"></li>
</ol>
<h2 id="其他可能用到的东西"><a href="#其他可能用到的东西" class="headerlink" title="其他可能用到的东西"></a>其他可能用到的东西</h2><ul>
<li>群晖核显驱动状态和硬解状态查询</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">ls /dev/dri</span><br><span class="line">cat /sys/kernel/debug/dri/0/i915_frequency_info</span><br></pre></td></tr></table></figure>

<ul>
<li>群晖替换驱动文件（将 i915.ko 文件放入 &#x2F;tmp&#x2F; 文件夹下）</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">rm /usr/lib/modules/i915.ko &amp;&amp; cp /tmp/i915.ko /usr/lib/modules/</span><br></pre></td></tr></table></figure>

<ul>
<li><p>让 VM 支持网络唤醒，配合 home assistant 做 htpc 开关机控制<br>参考：<a href="https://bbs.hassbian.com/thread-16061-1-1.html">https://bbs.hassbian.com/thread-16061-1-1.html</a></p>
</li>
<li><p>在虚拟机下控制主板RGB<br>安装 OpenRGB：<a href="https://openrgb.org/releases.html">https://openrgb.org/releases.html</a><br>直通 USB 中的 RGB 控制器，下载安装开启 OpenRGB（第一次打开需要管理员权限）</p>
</li>
<li><p>PVE 内核 5.15 会出现显卡直通 (HDMI 直通) 下 Windows 虚拟机的 鼠标指针不显示 或 鼠标反应卡顿 的问题。解决方法如下:</p>
</li>
</ul>
<ol>
<li>使用 noVNC 或 RDP 登录进 Windows，在“控制面板 - 鼠标 - 指针选项”中启用“显示鼠标轨迹”，并把滑块拖至最左 (基本不影响显示体验)；</li>
<li>升级到 6.x 内核或降级到 5.13 内核<br>检查是否安装 5.13 版内核:<br>proxmox-boot-tool kernel list</li>
</ol>
<p>如果 5.13 内核未被安装或者内核被手动清理的话可能需要手动安装 5.13 内核:<br>apt install pve-kernel-5.13</p>
<p>安装成功后再次执行以下命令查看已安装的内核:<br>proxmox-boot-tool kernel list</p>
<p>固定之后启动的内核版本:<br>proxmox-boot-tool kernel pin 5.13.19-6-pve</p>
<p>保存配置:<br>proxmox-boot-tool refresh</p>
<p>重启后内核即被回退至 5.13。</p>
<p>如果你想解除内核固定，可以执行:<br>proxmox-boot-tool kernel unpin 5.13.19-6-pve<br>proxmox-boot-tool refresh</p>
<h2 id="经历过的死机状况记录"><a href="#经历过的死机状况记录" class="headerlink" title="经历过的死机状况记录"></a>经历过的死机状况记录</h2><ol>
<li>J4125 的时候，USB 口不够用，接了两个 USB 集线器，集线器上插超过 3 个 USB 设备直通给 Windows，一小时之内绝对会 boom，至今不知道是那块主板的问题还是 PVE 的问题（后来一直插着 3 个 USB，再也没遇到过死机现象，升级 PVE 后也没测试，没深究原因）</li>
<li>刚装完新机子，拿回家用之后莫名其妙的不稳定，脸黑就死机，重装并升级到 7.2 之后好了，误会是内核的原因，直到前几天想改风扇转速，顺便开节能，死机情况又发生了，才确定是主板开启 C6&#x2F;C7 节能的原因。</li>
</ol>
<h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3>]]></content>
      <categories>
        <category>Proxmox VE</category>
      </categories>
      <tags>
        <tag>Proxmox VE</tag>
        <tag>PVE</tag>
        <tag>PVE设置</tag>
        <tag>PVE核显直通</tag>
        <tag>核显直通</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/05/25/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
